@page
@model EditConfigurationModel
@using ClientIntegrator.Common.Extensions;
@{
    ViewData["Title"] = Model.Configuration.Id != 0 ? "Update Configuration" : "Create Configuration";
}

<h2>@ViewData["Title"]</h2>
<div class="bg-light p-2 border-primary border-top breakout">
    <div class="container">
        <div class="row">
            <div class="col-6">
                <form method="post">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    @*Edit*@
                    @if (Model.Configuration.Id != 0)
                    {
                        <div class="form-group">
                            <label asp-for="Input.Id"></label>
                            <input asp-for="Input.Id" class="form-control" autocomplete="off" value="@Model.Configuration.Id" disabled />
                        </div>
                    }
                    else
                    {
                        @if (User.IsSuperUser())
                        {
                            <div class="form-group">
                                <label asp-for="Input.OrganizationId"></label>
                                <select class="form-control" asp-for="Input.OrganizationId" asp-items="Model.Organizations">
                                    <option value="">Choose an organization</option>
                                </select>
                                <span asp-validation-for="Input.OrganizationId" class="text-danger"></span>
                            </div>
                        }
                        else
                        {
                            <input type="hidden" asp-for="Input.OrganizationId" value="@Model.Configuration.OrganizationId" />
                        }
                    }
                    <input asp-for="Input.Id" value="@Model.Configuration.Id" type="hidden" />
                    <input asp-for="Input.ConfigurationDictId" value="@Model.Configuration.ConfigurationDictId" type="hidden" />

                    <div class="form-group">
                        <label asp-for="Input.Key"></label>
                        <input asp-for="Input.Key" class="form-control" autocomplete="off" value="@Model.Configuration.Key" />
                        <span asp-validation-for="Input.Key" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Input.Value"></label>
                        <input asp-for="Input.Value" class="form-control" autocomplete="off" value="@Model.Configuration.Value" />
                        <span asp-validation-for="Input.Value" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Input.Notes"></label>
                        <input asp-for="Input.Notes" class="form-control" autocomplete="off" value="@Model.Configuration.Notes" />
                        <span asp-validation-for="Input.Notes" class="text-danger"></span>
                    </div>

                    @if (Model.Configuration.Id != 0)
                    {
                        <button type="submit" class="btn btn-primary">Save</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-primary">Create</button>
                    }
                    <a class="btn btn-secondary" asp-page="./Index">Cancel</a>
                </form>
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrWhiteSpace(Model.Message))
{
    <partial name="_ModalMessage" model="@Model.Message" />
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
